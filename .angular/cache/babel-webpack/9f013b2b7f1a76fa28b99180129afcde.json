{"ast":null,"code":"import { Course } from 'src/app/shared/course';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/course.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/router\";\n\nfunction CourseComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Course Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CourseComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, CourseComponent_div_8_div_1_Template, 2, 0, \"div\", 24);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r1 = i0.ɵɵreference(7);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors.required);\n  }\n}\n\nfunction CourseComponent_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const cat_r13 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", cat_r13.QualificationId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(cat_r13.QualificationName);\n  }\n}\n\nfunction CourseComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Qualification is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CourseComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, CourseComponent_div_17_div_1_Template, 2, 0, \"div\", 24);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r3 = i0.ɵɵreference(13);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors.required);\n  }\n}\n\nfunction CourseComponent_div_35_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Course Price is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CourseComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, CourseComponent_div_35_div_1_Template, 2, 0, \"div\", 24);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r8 = i0.ɵɵreference(34);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r8.errors.required);\n  }\n}\n\nfunction CourseComponent_div_41_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Course Description is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CourseComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, CourseComponent_div_41_div_1_Template, 2, 0, \"div\", 24);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r10 = i0.ɵɵreference(40);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r10.errors.required);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"is invalid\": a0\n  };\n};\n\nexport let CourseComponent = /*#__PURE__*/(() => {\n  class CourseComponent {\n    constructor(corservice, toastrService, router, route) {\n      this.corservice = corservice;\n      this.toastrService = toastrService;\n      this.router = router;\n      this.route = route;\n      this.course = new Course();\n    }\n\n    ngOnInit() {\n      this.corservice.BindCmdQualification();\n      this.corId = this.route.snapshot.params['corId'];\n\n      if (this.corId != 0 || this.corId != null) {\n        this.corservice.getCourse(this.corId).subscribe(data => {\n          console.log(data);\n          this, this.corservice.formData = data;\n          this.corservice.formData = Object.assign({}, data);\n        }, error => console.log(error));\n      }\n    }\n\n    onSubmit(form) {\n      console.log(form.value);\n      let addId = this.corservice.formData.CourseId;\n\n      if (addId == 0 || addId == null) {\n        //insert\n        this.insertCourseRecord(form);\n      } else {\n        //update\n        console.log(\"update\");\n        this.updateCourseRecord(form);\n      }\n    } //reset/clear all content from form  at initialization\n\n\n    resetform(form) {\n      if (form != null) {\n        form.resetForm();\n      }\n    } //insert\n\n\n    insertCourseRecord(form) {\n      console.log(\"inserting a record...\");\n      this.corservice.insertCourse(form.value).subscribe(result => {\n        console.log(result);\n        this.resetform(form);\n        this.toastrService.success('Course record has been inserted', 'CRM appv2021');\n      });\n      window.alert(\"Course record has been inserted\");\n      window.location.reload();\n    } //update\n\n\n    updateCourseRecord(form) {\n      console.log(\"updating a record...\");\n      this.corservice.updateCourse(form.value).subscribe(result => {\n        console.log(result);\n        this.resetform(form);\n        this.toastrService.success('Course record has been inserted', 'CRM appv2021');\n        this.corservice.bindListCourses();\n      });\n      window.alert(\"Course record has been updated\");\n      window.location.reload();\n    }\n\n  }\n\n  CourseComponent.ɵfac = function CourseComponent_Factory(t) {\n    return new (t || CourseComponent)(i0.ɵɵdirectiveInject(i1.CourseService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n\n  CourseComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CourseComponent,\n    selectors: [[\"app-course\"]],\n    decls: 46,\n    vars: 22,\n    consts: [[\"name\", \"corform\", \"autocomplete\", \"off\", 3, \"ngSubmit\"], [\"form\", \"ngForm\"], [\"type\", \"text\", \"name\", \"CourseId\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\"], [\"name\", \"CourseName\", \"place\", \"\", \"holder\", \"enter name \", \"minLength\", \"10\", \"maxLength\", \"25\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"CourseName\", \"ngModel\"], [\"class\", \"validation-error\", 4, \"ngIf\"], [1, \"col-md-4\"], [\"name\", \"QualificationId\", \"id\", \"QualificationId\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"QualificationId\", \"ngModel\"], [\"value\", \"0\", \"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-check\"], [1, \"form-check-label\"], [\"type\", \"checkbox\", \"name\", \"IsPublic\", \"id\", \"IsPublic\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\"], [\"IsPublic\", \"ngModel\"], [\"type\", \"checkbox\", \"name\", \"IsAvailable\", \"id\", \"IsAvailable\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\"], [\"IsAvailable\", \"ngModel\"], [\"name\", \"CoursePrice\", \"place\", \"\", \"holder\", \"enter Course Price \", \"minLength\", \"2\", \"maxLength\", \"25\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"CoursePrice\", \"ngModel\"], [\"name\", \"CourseDescription\", \"place\", \"\", \"holder\", \"enter Course Description \", \"minLength\", \"2\", \"maxLength\", \"25\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"CourseDescription\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-primary\", \"form-control\", 3, \"disabled\"], [1, \"validation-error\"], [4, \"ngIf\"], [3, \"value\"]],\n    template: function CourseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r17 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function CourseComponent_Template_form_ngSubmit_0_listener() {\n          i0.ɵɵrestoreView(_r17);\n\n          const _r0 = i0.ɵɵreference(1);\n\n          return ctx.onSubmit(_r0);\n        });\n        i0.ɵɵelementStart(2, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function CourseComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.corservice.formData.CourseId = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"label\");\n        i0.ɵɵtext(5, \"Course Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 4, 5);\n        i0.ɵɵlistener(\"ngModelChange\", function CourseComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.corservice.formData.CourseName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, CourseComponent_div_8_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 3);\n        i0.ɵɵelementStart(10, \"label\", 7);\n        i0.ɵɵtext(11, \"Qualification\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"select\", 8, 9);\n        i0.ɵɵlistener(\"ngModelChange\", function CourseComponent_Template_select_ngModelChange_12_listener($event) {\n          return ctx.corservice.formData.QualificationId = $event;\n        });\n        i0.ɵɵelementStart(14, \"option\", 10);\n        i0.ɵɵtext(15, \"Choose Qualification\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, CourseComponent_option_16_Template, 2, 2, \"option\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, CourseComponent_div_17_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 3);\n        i0.ɵɵelementStart(19, \"div\", 12);\n        i0.ɵɵelementStart(20, \"label\", 13);\n        i0.ɵɵtext(21, \"IsPublic\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"input\", 14, 15);\n        i0.ɵɵlistener(\"ngModelChange\", function CourseComponent_Template_input_ngModelChange_22_listener($event) {\n          return ctx.corservice.formData.IsPublic = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 3);\n        i0.ɵɵelementStart(25, \"div\", 12);\n        i0.ɵɵelementStart(26, \"label\", 13);\n        i0.ɵɵtext(27, \"IsAvailable\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"input\", 16, 17);\n        i0.ɵɵlistener(\"ngModelChange\", function CourseComponent_Template_input_ngModelChange_28_listener($event) {\n          return ctx.corservice.formData.IsAvailable = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 3);\n        i0.ɵɵelementStart(31, \"label\");\n        i0.ɵɵtext(32, \"Course Price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"input\", 18, 19);\n        i0.ɵɵlistener(\"ngModelChange\", function CourseComponent_Template_input_ngModelChange_33_listener($event) {\n          return ctx.corservice.formData.CoursePrice = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(35, CourseComponent_div_35_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 3);\n        i0.ɵɵelementStart(37, \"label\");\n        i0.ɵɵtext(38, \"Course Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"input\", 20, 21);\n        i0.ɵɵlistener(\"ngModelChange\", function CourseComponent_Template_input_ngModelChange_39_listener($event) {\n          return ctx.corservice.formData.CourseDescription = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(41, CourseComponent_div_41_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(42, \"br\");\n        i0.ɵɵelementStart(43, \"div\", 3);\n        i0.ɵɵelementStart(44, \"button\", 22);\n        i0.ɵɵtext(45, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n\n        const _r1 = i0.ɵɵreference(7);\n\n        const _r3 = i0.ɵɵreference(13);\n\n        const _r8 = i0.ɵɵreference(34);\n\n        const _r10 = i0.ɵɵreference(40);\n\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.corservice.formData.CourseId);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.corservice.formData.CourseName)(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, _r1.touched && _r1.invalid));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r1.touched && _r1.invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.corservice.formData.QualificationId);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.corservice.qualifications);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r3.touched && _r3.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.corservice.formData.IsPublic);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.corservice.formData.IsAvailable);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.corservice.formData.CoursePrice)(\"ngClass\", i0.ɵɵpureFunction1(18, _c0, _r8.touched && _r8.invalid));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r8.touched && _r8.invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.corservice.formData.CourseDescription)(\"ngClass\", i0.ɵɵpureFunction1(20, _c0, _r10.touched && _r10.invalid));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r10.touched && _r10.invalid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !(_r0.valid && _r0.dirty));\n      }\n    },\n    styles: [\"\"]\n  });\n  return CourseComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}