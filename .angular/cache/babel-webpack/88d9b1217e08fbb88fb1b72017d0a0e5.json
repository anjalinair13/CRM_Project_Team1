{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { User } from '../shared/user';\nimport { Jwtresponse } from '../shared/jwtresponse';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../shared/auth.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction LoginComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1, \" UserName is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_12_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formControls.UserName.errors.required);\n  }\n}\n\nfunction LoginComponent_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1, \" Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_16_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.formControls.UserPassword.errors.required);\n  }\n}\n\nfunction LoginComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.error);\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formBuilder, router, authService) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.authService = authService;\n      this.isSubmitted = false;\n      this.loginUser = new User();\n      this.error = '';\n      this.jwtResponse = new Jwtresponse();\n    }\n\n    ngOnInit() {\n      //FormGroup\n      this.loginForm = this.formBuilder.group({\n        UserName: ['', [Validators.required, Validators.minLength(2)]],\n        UserPassword: ['', [Validators.required]]\n      });\n    }\n\n    get formControls() {\n      return this.loginForm.controls;\n    } //login verify\n\n\n    loginCredentials() {\n      this.isSubmitted = true;\n      console.log(this.loginForm.value); //invalid\n\n      if (this.loginForm.invalid) return; //valid\n\n      if (this.loginForm.valid) {\n        //calling mathod from AuthService  --Authorization\n        this.authService.loginVerify(this.loginForm.value).subscribe(data => {\n          console.log(data); //token with roleid and name\n\n          this.jwtResponse = data; //store in local/session storage\n\n          sessionStorage.setItem(\"jwtToken\", this.jwtResponse.token); //Check the role--based on RoleId, it redirect the respective component\n\n          if (this.jwtResponse.rId === 1) {\n            //logged as admin\n            console.log(\"ADMIN\"); //storing in localstorage/sessionstorage \n\n            localStorage.setItem(\"username\", this.jwtResponse.uName);\n            localStorage.setItem(\"ACCESS_ROLE\", this.jwtResponse.rId.toString());\n            sessionStorage.setItem(\"username\", this.jwtResponse.uName);\n            this.router.navigateByUrl('/admin');\n          } else if (this.jwtResponse.rId === 2) {\n            //logged as Manager\n            console.log(\"MANAGER\");\n            localStorage.setItem(\"username\", this.jwtResponse.uName);\n            localStorage.setItem(\"ACCESS_ROLE\", this.jwtResponse.rId.toString());\n            sessionStorage.setItem(\"username\", this.jwtResponse.uName);\n            this.router.navigateByUrl('/manager');\n          } else if (this.jwtResponse.rId === 3) {\n            //logged as cordinator\n            console.log(\"Cordinator\");\n            localStorage.setItem(\"username\", this.jwtResponse.uName);\n            localStorage.setItem(\"ACCESS_ROLE\", this.jwtResponse.rId.toString());\n            sessionStorage.setItem(\"username\", this.jwtResponse.uName);\n            this.router.navigateByUrl('/cordinator');\n          } else if (this.jwtResponse.rId === 4) {\n            //logged as user\n            console.log(\"USER\");\n            localStorage.setItem(\"username\", this.jwtResponse.uName);\n            localStorage.setItem(\"ACCESS_ROLE\", this.jwtResponse.rId.toString());\n            sessionStorage.setItem(\"username\", this.jwtResponse.uName);\n            this.router.navigateByUrl('./user');\n          } else {\n            this.error = \"sorry not allowed...Invalid authorization\";\n          }\n        }, errors => {\n          this.error = \"invalid username or password. try again\";\n        });\n      }\n    } //lpgin verift test\n\n\n    loginVerifyTest() {\n      if (this.loginForm.valid) {\n        this.authService.getUserByPassword(this.loginForm.value).subscribe(data => {\n          console.log(data);\n        }, error => {\n          console.log(error);\n        });\n      }\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 24,\n    vars: 4,\n    consts: [[1, \"background\"], [1, \"container\", 2, \"float\", \"center\"], [2, \"opacity\", \"0.6\", 3, \"formGroup\", \"ngSubmit\"], [1, \"card\", 2, \"width\", \"18rem\"], [\"src\", \"https://simg.nicepng.com/png/small/128-1280406_view-user-icon-png-user-circle-icon-png.png\", \"alt\", \"...\", 1, \"card-img-top\", 2, \"width\", \"70%\"], [1, \"card-body\"], [\"type\", \"text\", \"placeholder\", \"User Name\", \"formControlName\", \"UserName\", \"autocomplete\", \"off\", \"required\", \"\"], [4, \"ngIf\"], [\"type\", \"password\", \"placeholder\", \"Enter password\", \"formControlName\", \"UserPassword\", \"autocomplete\", \"off\", \"required\", \"\"], [1, \"btn\", \"btn-md\", \"btn-outline-primary\", 3, \"click\"], [1, \"fa\", \"fa-sign-in\"], [\"style\", \"color:red;text-align:left\", 4, \"ngIf\"], [\"style\", \"color: red;text-align: left;\", 4, \"ngIf\"], [2, \"color\", \"red\", \"text-align\", \"left\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\");\n        i0.ɵɵelementStart(3, \"h3\");\n        i0.ɵɵtext(4, \"Login here..\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"hr\");\n        i0.ɵɵelementStart(6, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.loginCredentials();\n        });\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵelement(8, \"img\", 4);\n        i0.ɵɵelementStart(9, \"div\", 5);\n        i0.ɵɵelementStart(10, \"div\");\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, LoginComponent_div_12_Template, 2, 1, \"div\", 7);\n        i0.ɵɵelement(13, \"br\");\n        i0.ɵɵelementStart(14, \"div\");\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, LoginComponent_div_16_Template, 2, 1, \"div\", 7);\n        i0.ɵɵelement(17, \"br\");\n        i0.ɵɵelementStart(18, \"div\");\n        i0.ɵɵelementStart(19, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_19_listener() {\n          return ctx.loginCredentials;\n        });\n        i0.ɵɵelement(20, \"i\", 10);\n        i0.ɵɵtext(21, \"Login \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(22, \"\\u00A0 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, LoginComponent_div_23_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSubmitted && ctx.formControls.UserName.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSubmitted && ctx.formControls.UserPassword.errors);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i4.NgIf],\n    styles: [\".container[_ngcontent-%COMP%]{margin:50px auto auto;width:50%;flex-direction:center;padding:50px;display:block;text-align:center;opacity:1}.background[_ngcontent-%COMP%]{background-image:url(https://hitfigure.com/wp-content/uploads/2012/03/login-background.jpg);background-repeat:no-repeat;height:150%;background-color:#a9a9a9}.card[_ngcontent-%COMP%]{margin:0 auto 10px;float:none;width:20%}.card-img-top[_ngcontent-%COMP%]{margin:0 auto 10px;float:none;width:20%}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}