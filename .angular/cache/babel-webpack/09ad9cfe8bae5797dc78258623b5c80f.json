{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { Resource } from './resource';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ResourceService = /*#__PURE__*/(() => {\n  class ResourceService {\n    constructor(httpClient) {\n      this.httpClient = httpClient; //create an instance of resource\n\n      this.formData = new Resource();\n    } //insert resource\n\n\n    insertResource(resources) {\n      return this.httpClient.post(environment.apiUrl + \"/api/resource/addresource\", resources);\n    } //update resource\n\n\n    updateResource(resources) {\n      return this.httpClient.put(environment.apiUrl + \"/api/resource/updateresource\", resources);\n    } //get all resources\n\n\n    bindListResources() {\n      this.httpClient.get(environment.apiUrl + \"/api/resource/getresources\").toPromise().then(response => this.resources = response);\n    } //get resource by Id\n\n\n    getResource(resourceId) {\n      console.log(\"resource id in get resource is\" + resourceId);\n      return this.httpClient.get(environment.apiUrl + \"/api/resource/getresourcebyid?id=\" + resourceId);\n    }\n\n  }\n\n  ResourceService.ɵfac = function ResourceService_Factory(t) {\n    return new (t || ResourceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ResourceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ResourceService,\n    factory: ResourceService.ɵfac,\n    providedIn: 'root'\n  });\n  return ResourceService;\n})();","map":null,"metadata":{},"sourceType":"module"}