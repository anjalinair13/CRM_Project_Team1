{"ast":null,"code":"import { User } from 'src/app/shared/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/shared/user.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nexport let UserComponent = /*#__PURE__*/(() => {\n  class UserComponent {\n    constructor(toastrService, router, userService, route) {\n      this.toastrService = toastrService;\n      this.router = router;\n      this.userService = userService;\n      this.route = route;\n      this.user = new User();\n    }\n\n    ngOnInit() {\n      this.userService.bindListUsers();\n    }\n\n    onSubmit(form) {\n      console.log(form.value);\n      let addId = this.userService.formData.UserId;\n      console.log(\"addid\", addId); //this.userService.formData.UserId)\n\n      if (addId == 0 || addId == null) {\n        //insert\n        this.form.setValue({\n          roleId: 4,\n          isActive: \"true\"\n        });\n        console.log(form.value);\n        this.insertRecord(form);\n      } else {\n        //update\n        console.log(\"update\");\n        this.updateRecord(form);\n      }\n    } //reset/clear all content from form  at initialization\n\n\n    resetform(form) {\n      if (form != null) {\n        form.resetForm();\n      }\n    } //insert\n\n\n    insertRecord(form) {\n      console.log(\"inserting a record...\");\n      this.userService.insertUser(form.value).subscribe(result => {\n        console.log(result);\n        this.resetform(form);\n        this.toastrService.success('user has been inserted', 'Training');\n      }); //window.alert(\"Resource record has been inserted\");\n      //window.location.reload();\n    } //update\n\n\n    updateRecord(form) {\n      console.log(\"updating a record...\");\n      this.userService.updateUser(form.value).subscribe(result => {\n        console.log(result);\n        this.resetform(form);\n        this.toastrService.success(' User has been updated', 'Training appv2021'); //this.resourceService.bindListPost();\n      }); //window.alert(\"Resource record has been updated\");\n\n      window.location.reload();\n    }\n\n  }\n\n  UserComponent.ɵfac = function UserComponent_Factory(t) {\n    return new (t || UserComponent)(i0.ɵɵdirectiveInject(i1.ToastrService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  UserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserComponent,\n    selectors: [[\"app-user\"]],\n    decls: 27,\n    vars: 18,\n    consts: [[\"name\", \"userform\", \"autocomplete\", \"off\", 3, \"ngSubmit\"], [\"form\", \"ngForm\"], [\"name\", \"UserId\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\"], [\"type\", \"text\", \"name\", \"UserName\", \"placeholder\", \"Enter Userr Name\", \"required\", \"\", \"minlength\", \"5\", \"maxlength\", \"25\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"UserName\", \"ngModel\"], [\"name\", \"UserPassword\", \"placeholder\", \"Enter password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"UserPassword\", \"ngModel\"], [\"type\", \"text\", \"name\", \"UserContact\", \"placeholder\", \"Enter contact\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"UserContact\", \"ngModel\"], [\"name\", \"UserEmail\", \"placeholder\", \"Enter email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"UserEmail\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-primary\", \"form-control\", 3, \"disabled\"]],\n    template: function UserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function UserComponent_Template_form_ngSubmit_0_listener() {\n          i0.ɵɵrestoreView(_r5);\n\n          const _r0 = i0.ɵɵreference(1);\n\n          return ctx.onSubmit(_r0);\n        });\n        i0.ɵɵelementStart(2, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function UserComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.userService.formData.UserId = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"label\");\n        i0.ɵɵtext(5, \"User Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 4, 5);\n        i0.ɵɵlistener(\"ngModelChange\", function UserComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.userService.formData.UserName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3);\n        i0.ɵɵelementStart(9, \"label\");\n        i0.ɵɵtext(10, \"User Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 6, 7);\n        i0.ɵɵlistener(\"ngModelChange\", function UserComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.userService.formData.UserPassword = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 3);\n        i0.ɵɵelementStart(14, \"label\");\n        i0.ɵɵtext(15, \"User Contact\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 8, 9);\n        i0.ɵɵlistener(\"ngModelChange\", function UserComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.userService.formData.UserContact = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 3);\n        i0.ɵɵelementStart(19, \"label\");\n        i0.ɵɵtext(20, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"input\", 10, 11);\n        i0.ɵɵlistener(\"ngModelChange\", function UserComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.userService.formData.UserEmail = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"br\");\n        i0.ɵɵelementStart(24, \"div\", 3);\n        i0.ɵɵelementStart(25, \"button\", 12);\n        i0.ɵɵtext(26, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n\n        const _r1 = i0.ɵɵreference(7);\n\n        const _r2 = i0.ɵɵreference(12);\n\n        const _r3 = i0.ɵɵreference(17);\n\n        const _r4 = i0.ɵɵreference(22);\n\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.userService.formData.UserId);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.userService.formData.UserName)(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, _r1.touched && _r1.invalid));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.userService.formData.UserPassword)(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, _r2.touched && _r2.invalid));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.userService.formData.UserContact)(\"ngClass\", i0.ɵɵpureFunction1(14, _c0, _r3.touched && _r3.invalid));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.userService.formData.UserEmail)(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, _r4.touched && _r4.invalid));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !(_r0.valid && _r0.dirty));\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i4.RequiredValidator, i4.MinLengthValidator, i4.MaxLengthValidator, i5.NgClass],\n    styles: [\"\"]\n  });\n  return UserComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}