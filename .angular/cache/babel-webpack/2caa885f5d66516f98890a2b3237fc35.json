{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(httpClient, router) {\n      this.httpClient = httpClient;\n      this.router = router;\n    } //get an user\n\n\n    getUserByPassword(user) {\n      console.log(user.UserName);\n      console.log(user.UserPassword);\n      return this.httpClient.get(environment.apiUrl + \"/api/login/getuser/\" + user.UserName + \"/\" + user.UserPassword);\n    } //Authorize retun token with roleId and username\n\n\n    loginVerify(user) {\n      //calling webservice url and passing username and password\n      console.log(\"Attempt authenticate and authorize ::\");\n      console.log(user);\n      return this.httpClient.get(environment.apiUrl + \"/api/login/\" + user.UserName + \"/\" + user.UserPassword);\n    }\n\n    logout() {\n      localStorage.removeItem('username');\n      localStorage.removeItem('ACCESS_ROLE');\n      sessionStorage.removeItem('username');\n      sessionStorage.removeItem('jwtToken');\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}